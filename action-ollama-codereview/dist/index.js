if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=new URL(".",import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/)?1:0,-1)+"/";var e={};const t=require("@actions/core");const n=require("fast-glob");const r=require("fs");const s=require("path");const i=12e4;const o=2e5;const a=2;const l=`\nYou are ‚ÄúCode Review Assistant‚Äù, an expert code reviewer with deep knowledge of secure coding, performance, clean code, and language idioms.\n\nRULES\n- Output MUST be a JSON array ONLY (no prose, no backticks, no extra keys).\n- Each item MUST include: severity, line, description, solution, explanation.\n- Valid severities: "CR√çTICA", "ALTA", "MEDIA", "BAJA".\n- "line" is a positive integer or a "start-end" string for ranges (e.g., "15-22").\n- Exclude false positives. If NO issues, output [].\n- Prefer concrete, minimal fixes. Provide small, self-contained code in "solution".\n- Consider: security (injections, secrets, deserializaci√≥n insegura, SSRF/RCE, XSS/CSRF), performance (complejidad, I/O, memoria), estilo/legibilidad, errores l√≥gicos, edge cases, mejores pr√°cticas de la plataforma, manejo de errores, concurrencia, validaci√≥n de entradas y contratos.\n- Mant√©n el lenguaje y t√©rminos en espa√±ol.\n\nOUTPUT FORMAT (array only)\n[\n  {\n    "severity": "ALTA",\n    "line": 42,\n    "description": "Descripci√≥n concisa del problema",\n    "solution": "C√≥digo corregido m√≠nimo y funcional",\n    "explanation": "Por qu√© esta soluci√≥n es mejor"\n  }\n]\n\nCONTEXTO DEL ARCHIVO\n- Nombre: \${filename}\n- Tipo: \${extension}\n- Contenido:\n\`\`\`\${extension}\n\${content}\n\`\`\`\nTarea: analiza el archivo y devuelve el JSON con los issues seg√∫n las reglas.`.trim();function buildUserPrompt(e,t,n){return`Code Review Assistant\n\n## File to Review\nFilename: ${e}\nFile type: ${t}\n\n## Code Content\n\`\`\`${t}\n${n}\n\`\`\`\n\nPlease analyze this file and return ONLY the JSON array of issues as specified.`}function sleep(e){return new Promise((t=>setTimeout(t,e)))}function htmlEscape(e){return String(e).replace(/[&<>"']/g,(e=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"}[e])))}function severityToCommand(e=""){const t=(e||"").toUpperCase();if(t==="CR√çTICA")return"error";if(t==="ALTA"||t==="MEDIA")return"warning";return"notice"}function firstLine(e){if(typeof e==="number")return e;if(typeof e==="string"){const t=e.match(/^(\d+)(?:\s*-\s*\d+)?$/);if(t)return parseInt(t[1],10)}return undefined}function createLimiter(e=a){let t=0;const n=[];const next=()=>{if(t>=e)return;const r=n.shift();if(!r)return;t++;r().finally((()=>{t--;next()}))};return e=>new Promise(((t,r)=>{n.push((()=>e().then(t,r)));next()}))}async function callOllamaChat({serverUrl:e,model:n,userPrompt:r,requestTimeoutMs:s,ollamaOpts:o={},attempt:a=1,maxAttempts:c=3}){const u=`${e.replace(/\/$/,"")}/api/chat`;const p={model:n,stream:false,options:filterOllamaOptions(o),messages:[{role:"system",content:l},{role:"user",content:r}]};const d=new AbortController;const m=setTimeout((()=>d.abort()),s||i);try{const e=await(globalThis.fetch||require("node-fetch"))(u,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(p),signal:d.signal});clearTimeout(m);if(!e.ok){const t=await e.text().catch((()=>""));throw new Error(`Ollama error: ${e.status} ${e.statusText} - ${t}`)}const t=await e.json();return t?.message?.content??""}catch(i){clearTimeout(m);if(a<c){const l=1e3*Math.pow(2,a-1)+Math.floor(Math.random()*400);t.warning(`[retry] intento ${a} fall√≥ (${i.message||i}); reintentando en ${l}ms`);await sleep(l);return callOllamaChat({serverUrl:e,model:n,userPrompt:r,requestTimeoutMs:s,ollamaOpts:o,attempt:a+1,maxAttempts:c})}throw i}}function filterOllamaOptions(e){const t={};if(!e)return t;if(e.num_predict!=null)t.num_predict=Number(e.num_predict);if(e.num_ctx!=null)t.num_ctx=Number(e.num_ctx);if(e.temperature!=null)t.temperature=Number(e.temperature);if(e.threads!=null)t.num_gpu??=undefined;return t}function safeParseJsonArray(e,t=[]){const tryParse=e=>{try{const t=JSON.parse(String(e).trim());return Array.isArray(t)?t:null}catch{return null}};let n=tryParse(e);if(n)return n;const r=String(e).match(/```json([\s\S]*?)```/i)||String(e).match(/```([\s\S]*?)```/i);if(r?.[1]){n=tryParse(r[1]);if(n)return n}const s=String(e).indexOf("[");const i=String(e).lastIndexOf("]");if(s!==-1&&i!==-1&&i>s){n=tryParse(String(e).slice(s,i+1));if(n)return n}return t}function emitAnnotations(e){for(const t of e){for(const e of t.issues){const n=severityToCommand(e.severity);const r=firstLine(e.line);const s=[];if(t.file)s.push(`file=${t.file}`);if(r)s.push(`line=${r}`);const i=s.length?`${n} ${s.join(",")}`:n;const o=`${e.description||"Issue"}${e.explanation?` ‚Äî ${e.explanation}`:""}`;console.log(`::${i}::${o}`)}}}function writeStepSummary(e){const t=e.length;const n={"CR√çTICA":0,ALTA:0,MEDIA:0,BAJA:0};let s=0;for(const t of e){for(const e of t.issues){const t=(e.severity||"").toUpperCase();if(n[t]!==undefined)n[t]++;s++}}const i=[`# üß† Ollama Code Review`,``,`**Archivos analizados:** ${t}  |  **Issues totales:** ${s}`,``,`- CR√çTICA: ${n["CR√çTICA"]}`,`- ALTA: ${n["ALTA"]}`,`- MEDIA: ${n["MEDIA"]}`,`- BAJA: ${n["BAJA"]}`,``,`Artefacto/Pages: **ollama-review-report** (index.html, report.json).`].join("\n");const o=process.env.GITHUB_STEP_SUMMARY;if(o)r.appendFileSync(o,i+"\n")}function generateHtmlReport(e){const t=e.reduce(((e,t)=>e+t.issues.length),0);const n=e.flatMap((e=>e.issues.filter((e=>(e.severity||"").toUpperCase()==="CR√çTICA"))));const r=e.map((e=>{const t=e.issues.map(((t,n)=>`\n      <tr>\n        <td>${n+1}</td>\n        <td><code>${htmlEscape(e.file)}</code></td>\n        <td>${htmlEscape(t.severity||"")}</td>\n        <td>${htmlEscape(String(t.line??""))}</td>\n        <td>${htmlEscape(t.description||"")}</td>\n        <td><pre>${htmlEscape(t.solution||"")}</pre></td>\n        <td>${htmlEscape(t.explanation||"")}</td>\n      </tr>\n    `)).join("");return t||`\n      <tr>\n        <td>‚Äì</td><td><code>${htmlEscape(e.file)}</code></td>\n        <td colspan="5"><em>Sin hallazgos</em></td>\n      </tr>\n    `})).join("");return`<!doctype html>\n<html lang="es">\n<head>\n<meta charset="utf-8">\n<meta name="viewport" content="width=device-width,initial-scale=1">\n<title>Ollama Code Review</title>\n<style>\n  body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Arial, sans-serif; margin: 24px; }\n  h1 { margin: 0 0 8px; }\n  .summary { margin: 8px 0 16px; }\n  table { border-collapse: collapse; width: 100%; }\n  th, td { border: 1px solid #ddd; padding: 8px; vertical-align: top; }\n  th { background: #f7f7f7; text-align: left; }\n  pre { white-space: pre-wrap; margin: 0; }\n  .tag { display: inline-block; padding: 2px 8px; border-radius: 999px; background: #eee; margin-right: 6px; font-size: 12px; }\n  .crit { background: #ffe5e5; color: #900; }\n  a.tag { text-decoration: none; color: inherit; }\n</style>\n</head>\n<body>\n  <h1>Ollama Code Review</h1>\n  <div class="summary">\n    <span class="tag">Archivos: ${e.length}</span>\n    <span class="tag">Issues totales: ${t}</span>\n    <span class="tag ${n.length?"crit":""}">CR√çTICAS: ${n.length}</span>\n    <a class="tag" href="./report.json" download>Descargar JSON</a>\n  </div>\n  <table>\n    <thead>\n      <tr>\n        <th>#</th><th>Archivo</th><th>Severidad</th><th>L√≠nea(s)</th><th>Descripci√≥n</th><th>Soluci√≥n</th><th>Explicaci√≥n</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${r}\n    </tbody>\n  </table>\n</body>\n</html>`}function extOf(e){const t=s.extname(e).replace(".","");return t||"txt"}function uniqKeepOrder(e){const t=new Set;const n=[];for(const r of e){if(!t.has(r)){t.add(r);n.push(r)}}return n}async function resolveFiles({file_list_path:e,file_list:s,file_glob:i,exclude_glob:o}){let a=[];if(e){try{const t=r.readFileSync(e,"utf8");a=t.split(/\r?\n/).map((e=>e.trim())).filter(Boolean)}catch{t.warning(`No se pudo leer file_list_path: ${e}`)}}if(a.length===0&&s){a=s.split(/\r?\n/).map((e=>e.trim())).filter(Boolean)}if(a.length===0){const e=[i,...String(o||"").split(/\r?\n/).map((e=>e.trim())).filter(Boolean).map((e=>`!${e}`)),"!**/.git/**","!**/*.png","!**/*.jpg","!**/*.jpeg","!**/*.gif","!**/*.webp","!**/*.pdf","!**/*.zip","!**/*.ico","!**/*.wasm","!**/*.exe","!**/*.dll","!**/*.so"];a=await n(e,{dot:true})}else{const e=/\.(png|jpg|jpeg|gif|webp|pdf|zip|ico|wasm|exe|dll|so)$/i;a=a.filter((t=>t&&!e.test(t)&&r.existsSync(t)&&r.statSync(t).isFile()));a=uniqKeepOrder(a)}return a}function readTextFileCapped(e,t){try{const n=r.statSync(e);const s=Math.max(0,Number(t)||o);if(n.size<=s){return{text:r.readFileSync(e,"utf8"),truncated:false,bytes:n.size}}const i=r.openSync(e,"r");const a=Buffer.allocUnsafe(s);r.readSync(i,a,0,s,0);r.closeSync(i);const l=`\n\n/* [AVISO] Contenido truncado a ${s} bytes de ${n.size} */\n`;return{text:a.toString("utf8")+l,truncated:true,bytes:s}}catch{return{text:"",truncated:false,bytes:0,err:true}}}async function run(){try{const e=t.getInput("model",{required:true});const n=t.getInput("server_url",{required:true});const l=t.getInput("file_glob")||"**/*.{ts,tsx,js,jsx,py,cs,java,go,rs}";const c=t.getInput("exclude_glob")||"";const u=t.getInput("file_list")||"";const p=t.getInput("file_list_path")||"";const d=(t.getInput("fail_on_critica")||"").toLowerCase()==="true";const m=parseInt(t.getInput("retention_days")||"7",10)||7;const f=parseInt(t.getInput("request_timeout_ms")||`${i}`,10);const g=parseInt(t.getInput("max_bytes_per_file")||`${o}`,10);const h=t.getInput("ollama_num_predict")||t.getInput("num_predict");const y=t.getInput("ollama_num_ctx")||t.getInput("num_ctx");const $=t.getInput("ollama_temperature")||t.getInput("temperature");const _=parseInt(t.getInput("review_max_concurrency")||process.env.REVIEW_MAX_CONCURRENCY||`${a}`,10);t.info(`[inputs] model="${e}" server_url="${n}"`);t.info(`[inputs] file_glob="${l}"`);t.info(`[inputs] exclude_glob="${c.replace(/\n/g,"\\n")}"`);t.info(`[inputs] file_list_path="${p}"`);t.info(`[inputs] file_list(len=${u.length})="${u?"[...]":""}"`);t.info(`[inputs] request_timeout_ms=${f} max_bytes_per_file=${g} num_predict=${h||""} num_ctx=${y||""} temperature=${$||""} max_concurrency=${_}`);const x=await resolveFiles({file_list_path:p,file_list:u,file_glob:l,exclude_glob:c});t.info(`[debug] files.count=${x.length}`);t.info(`[debug] files.preview(<=20)=${x.slice(0,20).join(", ")}`);if(x.length===0){t.warning("No se encontraron archivos a revisar.")}const b=createLimiter(Math.max(1,_));const w=[];let S=0;const A=x.map((r=>b((async()=>{const s=extOf(r);const{text:i,truncated:o,err:a,bytes:l}=readTextFileCapped(r,g);if(a){t.warning(`No se pudo leer como texto: ${r}`);return}t.info(`[file] ${r} size=${l}B used=${Math.min(l,g)}B${o?" [truncated]":""}`);const c=buildUserPrompt(r,s,i);const u={num_predict:h?Number(h):undefined,num_ctx:y?Number(y):undefined,temperature:$?Number($):undefined};const p=Date.now();let d;try{d=await callOllamaChat({serverUrl:n,model:e,userPrompt:c,requestTimeoutMs:f,ollamaOpts:u})}catch(e){t.warning(`[file] ${r} request failed: ${e.message||e}`);w.push({file:r,issues:[]});return}finally{const e=Date.now()-p;t.info(`[file] ${r} elapsed=${e}ms`)}const m=safeParseJsonArray(d,[]);w.push({file:r,issues:m})}))));for(const e of A){await e}const v=s.join(process.cwd(),"ollama-review-report");r.mkdirSync(v,{recursive:true});r.writeFileSync(s.join(v,"report.json"),JSON.stringify(w,null,2));r.writeFileSync(s.join(v,"index.html"),generateHtmlReport(w));t.info(`Reporte generado en ${v}`);emitAnnotations(w);writeStepSummary(w);t.setOutput("report_dir",v);t.setOutput("retention_days",m.toString());const C=w.some((e=>e.issues.some((e=>(e.severity||"").toUpperCase()==="CR√çTICA"))));if(d&&C){t.setFailed("Se encontraron issues con severidad CR√çTICA.")}}catch(e){t.setFailed(e.message||String(e))}}run();